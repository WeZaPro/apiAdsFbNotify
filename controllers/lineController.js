const { storeLineUserId, isLineUserExists } = require("../utils/db");
const { replyMessage } = require("../services/notifyService");
const { getLineProfile } = require("../services/lineService");
const { sendFBdata } = require("../controllers/facebookController");
const cron = require("node-cron");

exports.handleLineEvent = async (event) => {
  const userId = event.source.userId;
  const eventType = event.type;

  if (eventType === "follow") {
    const profile = await getLineProfile(userId);
    await storeLineUserId(userId, profile.displayName);
    await replyMessage(
      event.replyToken,
      "р╕Вр╕нр╕Ър╕Др╕╕р╕Ур╕Чр╕╡р╣Ир╕Хр╕┤р╕Фр╕Хр╕▓р╕бр╕Др╣Ир╕░! р╕Бр╕гр╕╕р╕Ур╕▓р╕Бр╕Фр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ"
    );
  }

  if (eventType === "message") {
    const userText = event.message.text.trim();
    const exists = await isLineUserExists(userId);

    if (userText === "р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ") {
      if (!exists) {
        const profile = await getLineProfile(userId);
        await storeLineUserId(userId, profile.displayName);
        await replyMessage(event.replyToken, "р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕кр╕│р╣Ар╕гр╣Зр╕Ир╕Др╣Ир╕░ ЁЯОЙ");
      } else {
        await replyMessage(event.replyToken, "р╕Др╕╕р╕Ур╣Др╕Фр╣Йр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕зр╕Др╣Ир╕░");
      }
      return;
    }

    if (!exists) {
      await replyMessage(
        event.replyToken,
        'р╕Бр╕гр╕╕р╕Ур╕▓р╕Юр╕┤р╕бр╕Юр╣Мр╕Др╕│р╕зр╣Ир╕▓ "р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ" р╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕гр╕┤р╣Ир╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Др╣Ир╕░'
      );
    }
  }
};

// р╕Хр╕▒р╣Йр╕Зр╣Ар╕зр╕ер╕▓р╣Гр╕лр╣Йр╕Чр╕│р╕Зр╕▓р╕Щр╕Чр╕╕р╕Бр╕зр╕▒р╕Щр╣Ар╕зр╕ер╕▓ 20:17 р╣Вр╕бр╕Зр╣Ар╕Кр╣Йр╕▓
// cron.schedule("17 20 * * *", async () => {
//   console.log("тП░ р╣Ар╕гр╕┤р╣Ир╕бр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е Facebook р╣Др╕Ыр╕Чр╕╡р╣И LINE OA...");
//   await sendFBdata(); // р╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ controller р╕Чр╕╡р╣Ир╕бр╕╡р╕Бр╕▓р╕г push message р╣Др╕Ы LINE
// });

// р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Гр╕лр╣Йр╕гр╕▒р╕Щр╕Чр╕╕р╕Бр╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З р╕гр╕░р╕лр╕зр╣Ир╕▓р╕Зр╣Ар╕зр╕ер╕▓ 06:00 - 24:00 (р╕Ир╕гр╕┤р╕Зр╣Ж р╕Др╕╖р╕н 06:00 - 23:59 р╕Щ. р╣Ар╕Юр╕гр╕▓р╕░р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З 24 р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╣Гр╕Щ cron format), р╕Др╕╕р╕Ур╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓ cron expression р╣Бр╕Ър╕Ър╕Щр╕╡р╣Й:
// cron.schedule("0 6-23 * * *", async () => {
//   console.log("тП░ р╣Ар╕гр╕┤р╣Ир╕бр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е Facebook р╣Др╕Ыр╕Чр╕╡р╣И LINE OA...");
//   await sendFBdata();
// });

// cron.schedule("18 14 * * *", async () => {
//   //14:17
//   console.log("ЁЯУЖ р╕гр╕▒р╕Щр╕Хр╕нр╕Щ 08:30 р╕Чр╕╕р╕Бр╕зр╕▒р╕Щ");
//   await sendFBdata();
// });

// р╕гр╕▒р╕Щр╕Чр╕╕р╕Бр╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З р╣Ар╕зр╕ер╕▓ HH:00 (р╣Ар╕Кр╣Ир╕Щ 07:00, 08:00, ..., 23:00)
cron.schedule("0 7-23 * * *", async () => {
  console.log("ЁЯУЖ Cron Job: р╕гр╕▒р╕Щр╕Чр╕╕р╕Бр╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕Зр╕гр╕░р╕лр╕зр╣Ир╕▓р╕З 07:00 р╕Цр╕╢р╕З 23:00");
  await sendFBdata();
});
