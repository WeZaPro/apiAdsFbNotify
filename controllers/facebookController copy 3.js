const { pushMessage } = require("../services/notifyService");
const { getAllLineUserIds } = require("../utils/db"); // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ function ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô db.js
const { getAdsIdDb } = require("../utils/db"); // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ function ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô db.js
const {
  fetchFacebookAdsInsights,
  findAdsIdFromData,
} = require("../utils/getFbAds"); // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ function ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô db.js

exports.sendFBdata = async () => {
  const users = await getAllLineUserIds(); // ‡∏î‡∏∂‡∏á lineUserId ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å DB

  for (const user of users) {
    console.log("Users fetched user from DB:", user);
    const message = `${user.displayName}üì£ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å Facebook: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß!`;

    try {
      const ads_id = JSON.parse(user.ads_id || "[]");
      const check_rules = JSON.parse(user.notifyConfig || "{}");

      const userObj = {
        LINE_USER_ID: user.lineUserId,
        displayName: user.displayName,
        AD_ACCOUNT_ID: user.adAccountId,
        FB_ACCESS_TOKEN: user.fbAccessToken,
        LINE_CHANNEL_ACCESS_TOKEN: process.env.LINE_CHANNEL_ACCESS_TOKEN,
        ads_id,
        check_rules,

        MsgCheck: user.MsgCheck,
        SpendCheck: user.SpendCheck,
        CtrCheck: user.CtrCheck,
        CpmCheck: user.CpmCheck,
        costMsgValue: user.costMsgValue,
        SpendValue: user.SpendValue,
        CtrValue: user.CtrValue,
        CpmValue: user.CpmValue,
        triggerTime: user.triggerTime,
        Status: user.Status, // <-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
        _date_preset: user.alertTime,
      };
      console.log("triggerTime --> ", userObj.triggerTime);
      //check trigger time ---start
      const now = new Date(); // ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
      const hours = now.getHours(); // ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á (0-23)
      const hourText = hours.toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°

      console.log("‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠:", hourText);
      let check_triggerTime = userObj.triggerTime;
      const currentHour = now.getHours().toString().padStart(2, "0"); // ‡∏î‡∏∂‡∏á‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÄ‡∏õ‡πá‡∏ô string ‡πÄ‡∏ä‡πà‡∏ô "10", "12"

      if (check_triggerTime.includes(currentHour)) {
        console.log("‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß! ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:", currentHour);
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Status ‡πÄ‡∏õ‡πá‡∏ô true ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠
        if (userObj.Status === 1) {
          await fetchFacebookAdsInsights(userObj, user.fbAccessToken);
        } else {
          console.log(
            `‡∏Ç‡πâ‡∏≤‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ${user.lineUserId} ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å Status ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà true`
          );
        }
      } else {
        console.log("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:", currentHour);
      }
      //check trigger time ---end
    } catch (error) {
      console.error(
        `‚ùå ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á ${user.lineUserId} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: `,
        error.message
      );
    }
  }
};

exports.getFBadsId = async (lineUserId) => {
  // return await getAdsIdDb(lineUserId);
  const data = await getAdsIdDb(lineUserId);
  // console.log("data.adAccountId  ", data);
  if (data.adAccountId) {
    const sendAidsId = await findAdsIdFromData(
      data.adAccountId,
      data.fbAccessToken
    );
    // console.log("sendAidsId ", sendAidsId);
    return sendAidsId;
  }
};
